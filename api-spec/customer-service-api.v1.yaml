openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /customers/{id}:
    get:
      tags:
        - customer-controller
      operationId: getCustomerById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "409":
          description: Conflict
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorData'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorData'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorData'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
    put:
      tags:
        - customer-controller
      operationId: updateCustomerById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        "409":
          description: Conflict
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorData'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorData'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorData'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
    delete:
      tags:
        - customer-controller
      operationId: deleteCustomerById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "409":
          description: Conflict
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorData'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorData'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorData'
        "200":
          description: OK
  /customers:
    get:
      tags:
        - customer-controller
      operationId: getCustomers
      parameters:
        - name: pageParams
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/PageParams'
      responses:
        "409":
          description: Conflict
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorData'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorData'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorData'
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CustomerPage'
    post:
      tags:
        - customer-controller
      operationId: createCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        "409":
          description: Conflict
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorData'
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorData'
        "400":
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorData'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
components:
  schemas:
    ErrorData:
      type: object
      properties:
        url:
          type: string
        errorCode:
          type: string
        message:
          type: string
        timestamp:
          type: string
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int32
        firstName:
          type: string
        lastName:
          type: string
        address:
          type: string
        city:
          type: string
        country:
          type: string
        email:
          type: string
        image:
          type: string
    PageParams:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
          default: 0
        pageSize:
          type: integer
          format: int32
          default: 10
        sortKey:
          type: string
          default: 'id'
        sortDirection:
          type: string
          default: 'ASC'
    CustomerPage:
      type: object
      properties:
        customers:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
